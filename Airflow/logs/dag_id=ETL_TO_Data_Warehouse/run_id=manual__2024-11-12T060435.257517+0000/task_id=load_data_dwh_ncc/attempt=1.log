[2024-11-12T06:06:27.271+0000] {local_task_job_runner.py:120} INFO - ::group::Pre task execution logs
[2024-11-12T06:06:27.298+0000] {taskinstance.py:2076} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: ETL_To_Data_Warehouse.load_data_dwh_ncc manual__2024-11-12T06:04:35.257517+00:00 [queued]>
[2024-11-12T06:06:27.306+0000] {taskinstance.py:2076} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: ETL_To_Data_Warehouse.load_data_dwh_ncc manual__2024-11-12T06:04:35.257517+00:00 [queued]>
[2024-11-12T06:06:27.307+0000] {taskinstance.py:2306} INFO - Starting attempt 1 of 1
[2024-11-12T06:06:27.319+0000] {taskinstance.py:2330} INFO - Executing <Task(SQLExecuteQueryOperator): load_data_dwh_ncc> on 2024-11-12 06:04:35.257517+00:00
[2024-11-12T06:06:27.325+0000] {standard_task_runner.py:63} INFO - Started process 92196 to run task
[2024-11-12T06:06:27.328+0000] {standard_task_runner.py:90} INFO - Running: ['***', 'tasks', 'run', 'ETL_To_Data_Warehouse', 'load_data_dwh_ncc', 'manual__2024-11-12T06:04:35.257517+00:00', '--job-id', '747', '--raw', '--subdir', 'DAGS_FOLDER/ETL_LDTBXH.dag.py', '--cfg-path', '/tmp/tmpid4ykzts']
[2024-11-12T06:06:27.330+0000] {standard_task_runner.py:91} INFO - Job 747: Subtask load_data_dwh_ncc
[2024-11-12T06:06:27.371+0000] {task_command.py:426} INFO - Running <TaskInstance: ETL_To_Data_Warehouse.load_data_dwh_ncc manual__2024-11-12T06:04:35.257517+00:00 [running]> on host 3d0ab7361361
[2024-11-12T06:06:27.663+0000] {taskinstance.py:2648} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='***' AIRFLOW_CTX_DAG_ID='ETL_To_Data_Warehouse' AIRFLOW_CTX_TASK_ID='load_data_dwh_ncc' AIRFLOW_CTX_EXECUTION_DATE='2024-11-12T06:04:35.257517+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='manual__2024-11-12T06:04:35.257517+00:00'
[2024-11-12T06:06:27.664+0000] {taskinstance.py:430} INFO - ::endgroup::
[2024-11-12T06:06:27.665+0000] {sql.py:276} INFO - Executing: use LDTBXH_Dwh;
SET SQL_SAFE_UPDATES = 0;

start transaction;

-- Update DimNCC với SCD Type 2
UPDATE DimNCC
SET
	RowIsCurrent = FALSE,
    RowEndDate = current_timestamp
WHERE
	EXISTS (
        SELECT 1
        FROM LDTBXH_Stg.Stg_DimNCC a
        WHERE 
            a.NCC_Code = DimNCC.NCC_Code
            AND a.identityCard_NCC = DimNCC.identityCard_NCC
            AND DimNCC.RowEndDate IS NULL
            AND (
                a.nativePlace_NCC <> DimNCC.nativePlace_NCC OR
                a.province_NCC <> DimNCC.province_NCC OR
                a.district_NCC <> DimNCC.district_NCC OR
                a.ward_NCC <> DimNCC.ward_NCC 
				)
    );

-- Insert Data vào DimNCC nếu như chưa có dữ liệu
insert into DimNCC
	(Id_NCC, NCC_Code, fullName_NCC, gender, dateOfBirth, ethnic, identityCard_NCC, nativePlace_NCC, province_NCC,
		district_NCC, ward_NCC, decided, medicalcondition, RowIsCurrent, RowStartDate, RowEndDate)
select
	a.Id_NCC, a.NCC_Code, a.fullName_NCC, a.gender, a.dateOfBirth, a.ethnic, a.identityCard_NCC,
    a.nativePlace_NCC, a.province_NCC, a.district_NCC, a.ward_NCC, a.decided, a.medicalcondition,
    TRUE as RowIsCurrent, current_timestamp as RowStartDate, NULL as RowEndDate
from
	LDTBXH_Stg.Stg_DimNCC a
where
	(a.NCC_Code, a.identityCard_NCC, a.nativePlace_NCC, a.province_NCC, a.district_NCC, a.ward_NCC) not in
    (select NCC_Code, identityCard_NCC, nativePlace_NCC, province_NCC, district_NCC, ward_NCC from DimNCC);

-- Update DimBenef với SCD Type 2
UPDATE DimBenef
SET
	RowIsCurrent = FALSE,
    RowEndDate = current_timestamp
WHERE
	EXISTS (
        SELECT 1
        FROM LDTBXH_Stg.Stg_DimBenef b
        WHERE 
            b.fullName_Benef = DimBenef.fullName_Benef
            AND b.identityCard_Benef = DimBenef.identityCard_Benef
            AND DimBenef.RowEndDate IS NULL
            AND (
                b.nativePlace_Benef <> DimBenef.nativePlace_Benef OR
                b.province_NCC <> DimBenef.province_NCC OR
                b.district_NCC <> DimBenef.district_NCC OR
                b.ward_NCC <> DimBenef.ward_NCC 
				)
    );

-- Insert Data vào DimBenef nếu như chưa có dữ liệu
insert into DimBenef
	(Id_Benef, fullName_Benef, dateOfBirth, gender, identityCard_Benef, nativePlace_Benef, relation_NCC, beneficiary,
		IsNCC, status, province_NCC, district_NCC, ward_NCC, RowIsCurrent, RowStartDate, RowEndDate)
select
	b.Id_Benef, b.fullName_Benef, b.dateOfBirth, b.gender, b.identityCard_Benef, b.nativePlace_Benef,
    b.relation_NCC, b.beneficiary, b.IsNCC, b.status, b.province_NCC, b.district_NCC, b.ward_NCC,
    TRUE as RowIsCurrent, current_timestamp as RowStartDate, NULL as RowEndDate
from
	LDTBXH_Stg.Stg_DimBenef b
where
	(b.fullName_Benef, b.identityCard_Benef, b.nativePlace_Benef, b.province_NCC, b.district_NCC, b.ward_NCC) not in
    (select fullName_Benef, identityCard_Benef, nativePlace_Benef, province_NCC, district_NCC, ward_NCC from DimBenef);

-- Insert Data vào BaoCaoNCC_Fact
insert into BaoCaoNCC_Fact
    (NCC_Key, Benef_Key, NCC_Code, fullName_NCC, gender, dateOfBirth, ethnic, 
     identityCard_NCC, identityCard_Benef, nativePlace_NCC, decided, medicalCondition)
select
    (SELECT NCC_Key FROM DimNCC WHERE Id_NCC = src.Id_NCC LIMIT 1) AS NCC_Key,
    (SELECT Benef_Key FROM DimBenef WHERE Id_Benef = src.Id_Benef LIMIT 1) AS Benef_Key,
    src.NCC_Code, src.fullName_NCC, src.gender, src.dateOfBirth, src.ethnic,
    src.identityCard_NCC, src.identityCard_Benef, src.nativePlace_NCC, src.decided, src.medicalCondition
from
    LDTBXH_Stg.Stg_BaoCaoNCC_Fact src
where
    (SELECT NCC_Key FROM DimNCC WHERE Id_NCC = src.Id_NCC LIMIT 1) is not null
    and (SELECT Benef_Key FROM DimBenef WHERE Id_Benef = src.Id_Benef LIMIT 1) is not null
    and NOT EXISTS (
        SELECT 1
        FROM BaoCaoNCC_Fact
        WHERE NCC_Key = (SELECT NCC_Key FROM DimNCC WHERE Id_NCC = src.Id_NCC LIMIT 1)
        AND Benef_Key = (SELECT Benef_Key FROM DimBenef WHERE Id_Benef = src.Id_Benef LIMIT 1)
    );
commit;
[2024-11-12T06:06:27.671+0000] {base.py:84} INFO - Using connection ID 'ldtbxh_dwh' for task execution.
[2024-11-12T06:06:27.679+0000] {base.py:84} INFO - Using connection ID 'ldtbxh_dwh' for task execution.
[2024-11-12T06:06:27.692+0000] {sql.py:487} INFO - Running statement: use LDTBXH_Dwh;
SET SQL_SAFE_UPDATES = 0;

start transaction;

-- Update DimNCC với SCD Type 2
UPDATE DimNCC
SET
	RowIsCurrent = FALSE,
    RowEndDate = current_timestamp
WHERE
	EXISTS (
        SELECT 1
        FROM LDTBXH_Stg.Stg_DimNCC a
        WHERE 
            a.NCC_Code = DimNCC.NCC_Code
            AND a.identityCard_NCC = DimNCC.identityCard_NCC
            AND DimNCC.RowEndDate IS NULL
            AND (
                a.nativePlace_NCC <> DimNCC.nativePlace_NCC OR
                a.province_NCC <> DimNCC.province_NCC OR
                a.district_NCC <> DimNCC.district_NCC OR
                a.ward_NCC <> DimNCC.ward_NCC 
				)
    );

-- Insert Data vào DimNCC nếu như chưa có dữ liệu
insert into DimNCC
	(Id_NCC, NCC_Code, fullName_NCC, gender, dateOfBirth, ethnic, identityCard_NCC, nativePlace_NCC, province_NCC,
		district_NCC, ward_NCC, decided, medicalcondition, RowIsCurrent, RowStartDate, RowEndDate)
select
	a.Id_NCC, a.NCC_Code, a.fullName_NCC, a.gender, a.dateOfBirth, a.ethnic, a.identityCard_NCC,
    a.nativePlace_NCC, a.province_NCC, a.district_NCC, a.ward_NCC, a.decided, a.medicalcondition,
    TRUE as RowIsCurrent, current_timestamp as RowStartDate, NULL as RowEndDate
from
	LDTBXH_Stg.Stg_DimNCC a
where
	(a.NCC_Code, a.identityCard_NCC, a.nativePlace_NCC, a.province_NCC, a.district_NCC, a.ward_NCC) not in
    (select NCC_Code, identityCard_NCC, nativePlace_NCC, province_NCC, district_NCC, ward_NCC from DimNCC);

-- Update DimBenef với SCD Type 2
UPDATE DimBenef
SET
	RowIsCurrent = FALSE,
    RowEndDate = current_timestamp
WHERE
	EXISTS (
        SELECT 1
        FROM LDTBXH_Stg.Stg_DimBenef b
        WHERE 
            b.fullName_Benef = DimBenef.fullName_Benef
            AND b.identityCard_Benef = DimBenef.identityCard_Benef
            AND DimBenef.RowEndDate IS NULL
            AND (
                b.nativePlace_Benef <> DimBenef.nativePlace_Benef OR
                b.province_NCC <> DimBenef.province_NCC OR
                b.district_NCC <> DimBenef.district_NCC OR
                b.ward_NCC <> DimBenef.ward_NCC 
				)
    );

-- Insert Data vào DimBenef nếu như chưa có dữ liệu
insert into DimBenef
	(Id_Benef, fullName_Benef, dateOfBirth, gender, identityCard_Benef, nativePlace_Benef, relation_NCC, beneficiary,
		IsNCC, status, province_NCC, district_NCC, ward_NCC, RowIsCurrent, RowStartDate, RowEndDate)
select
	b.Id_Benef, b.fullName_Benef, b.dateOfBirth, b.gender, b.identityCard_Benef, b.nativePlace_Benef,
    b.relation_NCC, b.beneficiary, b.IsNCC, b.status, b.province_NCC, b.district_NCC, b.ward_NCC,
    TRUE as RowIsCurrent, current_timestamp as RowStartDate, NULL as RowEndDate
from
	LDTBXH_Stg.Stg_DimBenef b
where
	(b.fullName_Benef, b.identityCard_Benef, b.nativePlace_Benef, b.province_NCC, b.district_NCC, b.ward_NCC) not in
    (select fullName_Benef, identityCard_Benef, nativePlace_Benef, province_NCC, district_NCC, ward_NCC from DimBenef);

-- Insert Data vào BaoCaoNCC_Fact
insert into BaoCaoNCC_Fact
    (NCC_Key, Benef_Key, NCC_Code, fullName_NCC, gender, dateOfBirth, ethnic, 
     identityCard_NCC, identityCard_Benef, nativePlace_NCC, decided, medicalCondition)
select
    (SELECT NCC_Key FROM DimNCC WHERE Id_NCC = src.Id_NCC LIMIT 1) AS NCC_Key,
    (SELECT Benef_Key FROM DimBenef WHERE Id_Benef = src.Id_Benef LIMIT 1) AS Benef_Key,
    src.NCC_Code, src.fullName_NCC, src.gender, src.dateOfBirth, src.ethnic,
    src.identityCard_NCC, src.identityCard_Benef, src.nativePlace_NCC, src.decided, src.medicalCondition
from
    LDTBXH_Stg.Stg_BaoCaoNCC_Fact src
where
    (SELECT NCC_Key FROM DimNCC WHERE Id_NCC = src.Id_NCC LIMIT 1) is not null
    and (SELECT Benef_Key FROM DimBenef WHERE Id_Benef = src.Id_Benef LIMIT 1) is not null
    and NOT EXISTS (
        SELECT 1
        FROM BaoCaoNCC_Fact
        WHERE NCC_Key = (SELECT NCC_Key FROM DimNCC WHERE Id_NCC = src.Id_NCC LIMIT 1)
        AND Benef_Key = (SELECT Benef_Key FROM DimBenef WHERE Id_Benef = src.Id_Benef LIMIT 1)
    );
commit;, parameters: None
[2024-11-12T06:06:27.694+0000] {sql.py:496} INFO - Rows affected: 0
[2024-11-12T06:07:34.159+0000] {taskinstance.py:441} INFO - ::group::Post task execution logs
[2024-11-12T06:07:34.176+0000] {taskinstance.py:1206} INFO - Marking task as SUCCESS. dag_id=ETL_To_Data_Warehouse, task_id=load_data_dwh_ncc, run_id=manual__2024-11-12T06:04:35.257517+00:00, execution_date=20241112T060435, start_date=20241112T060627, end_date=20241112T060734
[2024-11-12T06:07:34.230+0000] {local_task_job_runner.py:240} INFO - Task exited with return code 0
[2024-11-12T06:07:34.251+0000] {taskinstance.py:3503} INFO - 1 downstream tasks scheduled from follow-on schedule check
[2024-11-12T06:07:34.253+0000] {local_task_job_runner.py:222} INFO - ::endgroup::
